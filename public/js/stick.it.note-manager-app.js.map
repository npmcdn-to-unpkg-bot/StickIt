{"version":3,"sources":["note-manager-app.js"],"names":[],"mappingsfile":"stick.it.note-manager-app.js","sourcesContent":["\r\n\r\nnew Vue({\r\n    el: '#note-manager-app',\r\n\r\n    data: {\r\n        notes: [],\r\n        loading: false,\r\n        include_share: false,\r\n        restore: false,\r\n        deleted_note_id: null,\r\n        search: '',\r\n        new_note: {\r\n            title: '',\r\n            description: '',\r\n            color_id: null\r\n        },\r\n        edit_note: {\r\n            title: '',\r\n            description: '',\r\n            color_id: null\r\n        },\r\n        share_user_list: [],\r\n        new_share: {\r\n            email: '',\r\n            modify: false\r\n        },\r\n        loading_shares: false,\r\n        editing_note: null,\r\n        sharing_note: null\r\n    },\r\n\r\n    ready: function () {\r\n        this.loadNotes();\r\n    },\r\n\r\n    methods: {\r\n        submitCreateNote: function (event) {\r\n            event.preventDefault();\r\n\r\n            $('#createNote').modal('hide');\r\n\r\n            this.$http.post('/api/notes/create', this.new_note).then(function (response) {\r\n                this.notes.push(response.json())\r\n            }, function () {\r\n                alert('Something Went Wrong');\r\n            });\r\n\r\n            this.clearCreateNoteForm();\r\n        },\r\n        restoreDeletedNote: function () {\r\n            this.$http.get('/api/notes/restore/' + this.deleted_note_id).then(function (response) {\r\n                this.notes.push(response.json())\r\n            }, function () {\r\n                alert('Something Went Wrong');\r\n            });\r\n        },\r\n        clearCreateNoteForm: function () {\r\n            this.new_note = {\r\n                title: '',\r\n                description: '',\r\n                color_id: null\r\n            }\r\n        },\r\n        clearEditNoteForm: function () {\r\n            this.edit_note = {\r\n                title: '',\r\n                description: '',\r\n                color_id: null\r\n            }\r\n        },\r\n        includeShares: function () {\r\n            this.notes = [[]];\r\n\r\n            this.loadNotes();\r\n        },\r\n        loadNotes: function () {\r\n            this.loading = true;\r\n\r\n            this.$http.get('/api/notes?shares=' + this.include_share).then(function (response) {\r\n                this.notes = response.json();\r\n                $('.loading').removeClass('loading');\r\n                this.loading = false;\r\n            }, function () {\r\n                this.loading = false;\r\n                alert('Something Went Wrong');\r\n            });\r\n        },\r\n        deleteNote: function (note) {\r\n            var self = this;\r\n\r\n            self.$http.get('/api/notes/delete/' + note.id).then(function (response) {\r\n                self.deleted_note_id = note.id;\r\n                self.notes.$remove(note);\r\n                self.restore = true;\r\n                setTimeout(function () {\r\n                    self.restore = false;\r\n                }, 3000);\r\n            }, function () {\r\n                alert('Something Went Wrong');\r\n            });\r\n        },\r\n        editNote: function (note) {\r\n            this.editing_note = note;\r\n            this.edit_note = {\r\n                title: note.title,\r\n                description: note.description,\r\n                color_id: note.color_id\r\n            };\r\n\r\n            $('#editNote').modal('show');\r\n        },\r\n        shareNote: function (note) {\r\n            this.initShareNoteModal(note);\r\n\r\n            this.$http.get('/api/notes/share/' + note.id + '/list').then(function (response) {\r\n                this.share_user_list = response.json();\r\n                this.loading_shares = false;\r\n            }, function () {\r\n                alert('Something Went Wrong');\r\n            });\r\n        },\r\n        initShareNoteModal: function (note) {\r\n            this.share_user_list = [];\r\n            this.sharing_note = note;\r\n            this.loading_shares = true;\r\n            this.clearNewShareForm();\r\n\r\n            $('#shareNote').modal('show');\r\n        },\r\n        submitEditNote: function () {\r\n            var self = this;\r\n            event.preventDefault();\r\n\r\n            $('#editNote').modal('hide');\r\n\r\n            self.$http.post('/api/notes/edit/' + this.editing_note.id, this.edit_note).then(function (response) {\r\n                self.notes.$set(self.notes.indexOf(self.editing_note), response.json());\r\n            }, function () {\r\n                alert('Something Went Wrong');\r\n            });\r\n\r\n            self.clearCreateNoteForm();\r\n        },\r\n        deleteShareUser: function (user) {\r\n            this.$http.post('/api/notes/share/' + this.sharing_note.id + '/remove', {email: user.email}).then(function (response) {\r\n                this.share_user_list.$remove(user)\r\n            }, function () {\r\n                alert('Something Went Wrong');\r\n            });\r\n\r\n        },\r\n        addNewShare: function () {\r\n            this.$http.post('/api/notes/share/' + this.sharing_note.id + '/add', this.new_share).then(function (response) {\r\n                this.share_user_list.push(response.json());\r\n                this.clearNewShareForm();\r\n            }, function () {\r\n                alert('Something Went Wrong');\r\n            });\r\n        },\r\n        clearNewShareForm: function () {\r\n            this.new_share = {\r\n                email: '',\r\n                modify: false\r\n            }\r\n        }\r\n    }\r\n});"],"sourceRoot":"/source/"}